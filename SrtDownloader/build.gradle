/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'wandrillemoussel' at '16/07/14 00:16' with Gradle 2.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// To re-create wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--always', '--dirty=-snapshot'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    def ver = getVersionName()
    manifest {
        attributes 'Implementation-Title': 'Subtitle downloader',  
            'Implementation-Version': ver,
            'Main-Class': "org.moussel.srtdownloader.SrtDownloaderShell"
    }
    baseName = project.name + '-' + ver
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'commons-lang:commons-lang:2.6'
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.7'
    compile 'com.fasterxml.jackson.jr:jackson-jr-objects:2.5.3'
    compile 'com.googlecode.clichemaven:cliche:110413'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    
    mainClassName = "org.moussel.srtdownloader.SrtDownloaderShell"
}
